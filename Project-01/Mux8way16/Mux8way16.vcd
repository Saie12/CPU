$date
	Fri Aug 09 00:00:38 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_mux8way16 $end
$var wire 16 ! out [15:0] $end
$var reg 16 " a [15:0] $end
$var reg 16 # b [15:0] $end
$var reg 16 $ c [15:0] $end
$var reg 16 % d [15:0] $end
$var reg 16 & e [15:0] $end
$var reg 16 ' f [15:0] $end
$var reg 16 ( g [15:0] $end
$var reg 16 ) h [15:0] $end
$var reg 3 * sel [2:0] $end
$var integer 32 + file [31:0] $end
$scope module uut $end
$var wire 16 , a [15:0] $end
$var wire 16 - b [15:0] $end
$var wire 16 . c [15:0] $end
$var wire 16 / d [15:0] $end
$var wire 16 0 e [15:0] $end
$var wire 16 1 f [15:0] $end
$var wire 16 2 g [15:0] $end
$var wire 16 3 h [15:0] $end
$var wire 3 4 sel [2:0] $end
$var wire 16 5 out [15:0] $end
$upscope $end
$scope task test_case $end
$var reg 16 6 a_input [15:0] $end
$var reg 16 7 b_input [15:0] $end
$var reg 16 8 c_input [15:0] $end
$var reg 16 9 d_input [15:0] $end
$var reg 16 : e_input [15:0] $end
$var reg 16 ; f_input [15:0] $end
$var reg 16 < g_input [15:0] $end
$var reg 16 = h_input [15:0] $end
$var reg 3 > sel_input [2:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b10000000000000000000000000000011 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#10000
b1 *
b1 4
b1 >
#20000
b10 *
b10 4
b10 >
#30000
b11 *
b11 4
b11 >
#40000
b100 *
b100 4
b100 >
#50000
b101 *
b101 4
b101 >
#60000
b110 *
b110 4
b110 >
#70000
b111 *
b111 4
b111 >
#80000
b1001000110100 !
b1001000110100 5
b0 *
b0 4
b1000100110101011 )
b1000100110101011 3
b111100010011010 (
b111100010011010 2
b110011110001001 '
b110011110001001 1
b101011001111000 &
b101011001111000 0
b100010101100111 %
b100010101100111 /
b11010001010110 $
b11010001010110 .
b10001101000101 #
b10001101000101 -
b1001000110100 "
b1001000110100 ,
b0 >
b1000100110101011 =
b111100010011010 <
b110011110001001 ;
b101011001111000 :
b100010101100111 9
b11010001010110 8
b10001101000101 7
b1001000110100 6
#90000
b10001101000101 !
b10001101000101 5
b1 *
b1 4
b1 >
#100000
b11010001010110 !
b11010001010110 5
b10 *
b10 4
b10 >
#110000
b100010101100111 !
b100010101100111 5
b11 *
b11 4
b11 >
#120000
b101011001111000 !
b101011001111000 5
b100 *
b100 4
b100 >
#130000
b110011110001001 !
b110011110001001 5
b101 *
b101 4
b101 >
#140000
b111100010011010 !
b111100010011010 5
b110 *
b110 4
b110 >
#150000
b1000100110101011 !
b1000100110101011 5
b111 *
b111 4
b111 >
#160000
