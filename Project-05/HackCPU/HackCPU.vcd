$date
	Tue Aug 27 19:41:44 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_HackCPU $end
$var wire 1 ! writeM $end
$var wire 16 " pc [15:0] $end
$var wire 16 # outM [15:0] $end
$var wire 16 $ addressM [15:0] $end
$var parameter 32 % CLK_PERIOD $end
$var reg 1 & clk $end
$var reg 16 ' inM [15:0] $end
$var reg 16 ( instruction [15:0] $end
$var reg 1 ) reset $end
$var integer 32 * output_file [31:0] $end
$scope module uut $end
$var wire 1 & clk $end
$var wire 16 + inM [15:0] $end
$var wire 16 , instruction [15:0] $end
$var wire 1 ) reset $end
$var wire 1 - aluZero $end
$var wire 16 . aluResult [15:0] $end
$var reg 16 / A [15:0] $end
$var reg 16 0 D [15:0] $end
$var reg 16 1 addressM [15:0] $end
$var reg 16 2 outM [15:0] $end
$var reg 16 3 pc [15:0] $end
$var reg 1 ! writeM $end
$scope module alu $end
$var wire 16 4 A [15:0] $end
$var wire 16 5 D [15:0] $end
$var wire 16 6 instruction [15:0] $end
$var reg 16 7 result [15:0] $end
$var reg 1 - zero $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1010 %
$end
#0
$dumpvars
b0 7
bx 6
b0 5
b0 4
b0 3
bx 2
bx 1
b0 0
b0 /
b0 .
1-
bx ,
bx +
b10000000000000000000000000000011 *
1)
bx (
bx '
0&
bx $
bx #
b0 "
x!
$end
#5000
0!
b0 $
b0 1
b0 #
b0 2
1&
#10000
0&
b1 (
b1 ,
b1 6
0)
#15000
0-
b1 .
b1 7
b1 /
b1 4
b1 "
b1 3
1&
#20000
b110 .
b110 7
0&
b1000000000000 (
b1000000000000 ,
b1000000000000 6
b101 0
b101 5
#25000
b111 .
b111 7
1!
b1 $
b1 1
b101 #
b101 2
b110 0
b110 5
b10 "
b10 3
1&
#30000
0&
b1000000000001 (
b1000000000001 ,
b1000000000001 6
#35000
b1000 .
b1000 7
b111 0
b111 5
1!
b1 $
b1 1
b110 #
b110 2
b11 "
b11 3
1&
#40000
1-
b0 .
b0 7
b0 0
b0 5
b0 /
b0 4
b0 "
b0 3
0&
1)
#45000
1!
b0 $
b0 1
b0 #
b0 2
1&
#50000
0&
b10 (
b10 ,
b10 6
0)
#55000
0-
b10 .
b10 7
b10 /
b10 4
0!
b1 "
b1 3
1&
#60000
0&
